<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE struts PUBLIC
	"-//Apache Software Foundation//DTD Struts Configuration 2.3//EN"
	"http://struts.apache.org/dtds/struts-2.3.dtd">
<struts>
	
	<package name="demo1" extends="struts-default" namespace="/">
		
		<!-- 配置全局的结果页面 
		<global-results>
			<result name="success" type="redirect">/demo1/suc.jsp</result>
		</global-results>
		-->
		
		<!-- 完全解耦合的方式 -->
		<action name="demo1Action" class="com.itheima.demo1.Demo1Action">
			<result name="success">/demo1/suc.jsp</result>
		</action>
		
		<!-- 原生的方式 -->
		<action name="demo2Action" class="com.itheima.demo1.Demo2Action">
			<result name="success">/demo1/suc.jsp</result>
		</action>
		
		<!-- 演示重定向到Action -->
		<action name="demo3Action_*" class="com.itheima.demo1.Demo3Action" method="{1}">
			<result name="success" type="redirectAction">demo3Action_update</result>
		</action>
		
	</package>
	
	
	<package name="demo2" extends="struts-default" namespace="/">
		<!-- 属性驱动的方式 -->
		<action name="regist1" class="com.itheima.demo2.Regist1Action"/>
		
		<!-- 属性驱动方式，把数据封装到JavaBean对象中 -->
		<action name="regist2" class="com.itheima.demo2.Regist2Action"/>
		
		<!-- 模型驱动的方式 -->
		<action name="regist3" class="com.itheima.demo2.Regist3Action"/>
		
		<!-- 把数据封装到List集合中 -->
		<action name="regist4" class="com.itheima.demo2.Regist4Action"/>
		
		<!-- 把数据封装到map集合中 -->
		<action name="regist5" class="com.itheima.demo2.Regist5Action"/>
	</package>
	
	
	<package name="demo3" extends="struts-default" namespace="/">
	
		<!-- 定义了拦截器 第一种方式
		<interceptors>
			<interceptor name="DemoInterceptor" class="com.itheima.interceptor.DemoInterceptor"/>
		</interceptors>
		-->
		
		<!-- 第二种方式：定义拦截器栈 -->
		<interceptors>
			<interceptor name="DemoInterceptor" class="com.itheima.interceptor.DemoInterceptor"/>
			<!-- 定义拦截器栈 -->
			<interceptor-stack name="myStack">
				<interceptor-ref name="DemoInterceptor"/>
				<interceptor-ref name="defaultStack"/>
			</interceptor-stack>
		</interceptors>
		
		<action name="userAction" class="com.itheima.demo3.UserAction">
			<!-- 只要是引用自己的拦截器，默认栈的拦截器就不执行了，必须要手动引入默认栈 
			<interceptor-ref name="DemoInterceptor"/>
			<interceptor-ref name="defaultStack"/>
			-->
			
			<!-- 引入拦截器栈就OK -->
			<interceptor-ref name="myStack"/>
		</action>
	</package>
    
</struts>













